# Generated by Django 4.2.16 on 2025-01-31 07:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Test Categories',
            },
        ),
        migrations.CreateModel(
            name='TestEnvironment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('base_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('order', models.PositiveSmallIntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Test Priorities',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(help_text='Provide a brief description of what this test case verifies')),
                ('test_type', models.CharField(choices=[('functional', 'Functional Test'), ('integration', 'Integration Test'), ('regression', 'Regression Test'), ('usability', 'Usability Test'), ('performance', 'Performance Test'), ('security', 'Security Test'), ('smoke', 'Smoke Test'), ('sanity', 'Sanity Test')], default='functional', max_length=20)),
                ('automation_status', models.CharField(choices=[('not_automated', 'Not Automated'), ('automated', 'Automated'), ('in_progress', 'Automation In Progress'), ('needs_update', 'Automation Needs Update')], default='not_automated', max_length=20)),
                ('prerequisites', models.TextField(blank=True, help_text='List any prerequisites needed before executing this test case')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('ready', 'Ready for Testing'), ('in_progress', 'In Progress'), ('passed', 'Passed'), ('failed', 'Failed'), ('blocked', 'Blocked'), ('skipped', 'Skipped')], default='draft', max_length=20)),
                ('actual_result', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='test_cases/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estimated_time', models.DurationField(blank=True, help_text='Estimated time to execute this test case', null=True)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tests', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='test_cases', to='pm.testcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_tests', to=settings.AUTH_USER_MODEL)),
                ('dependent_on', models.ManyToManyField(blank=True, related_name='dependent_test_cases', to='pm.testcase')),
                ('environment', models.ForeignKey(help_text='Select the environment where this test should be executed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.testenvironment')),
                ('priority', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pm.testpriority')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_cases', to='core.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.PositiveIntegerField()),
                ('action', models.TextField(help_text='What action should be performed')),
                ('expected_result', models.TextField(help_text='What is the expected outcome')),
                ('actual_result', models.TextField(blank=True, help_text='What actually happened (fill during execution)')),
                ('status', models.CharField(choices=[('not_executed', 'Not Executed'), ('passed', 'Passed'), ('failed', 'Failed'), ('blocked', 'Blocked'), ('skipped', 'Skipped')], default='not_executed', max_length=20)),
                ('screenshot', models.ImageField(blank=True, help_text='Upload a screenshot if needed', null=True, upload_to='test_steps/')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='pm.testcase')),
            ],
            options={
                'ordering': ['step_number'],
                'unique_together': {('test_case', 'step_number')},
            },
        ),
    ]
